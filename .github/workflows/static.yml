# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["pages"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  GODOT_VERSION: 4.0.3
  EXPORT_NAME: test-project
  PROJECT_PATH: test-project

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  # export-web:
  #   name: Web Export
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: barichello/godot-ci:3.3.4
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/templates
  #         mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
  #     - name: Web Build
  #       run: |
  #         mkdir -v -p build/web
  #         godot -v --export "HTML5" build/web/index.html


  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.0.3
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Godot
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot -v --export "HTML5" build/web/index.html
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: build/web
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
